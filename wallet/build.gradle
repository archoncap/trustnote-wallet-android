apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "org.trustnote.wallet"

        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "0.5"

        // Enable VectorDrawableCompat for API < 21
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        release {
            applicationIdSuffix '.release'
            signingConfig signingConfigs.release

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    sourceSets {
        // Main source set is Kotlin!
        main.java.srcDirs += 'src/main/kotlin'

        // Unit tests live in src/unitTest.
        test.java.srcDir 'src/unitTests/kotlin'

        // Integration tests live in src/integrationTest.
        test.java.srcDir 'src/integrationTests/kotlin'

        // Unit tests for debug build type specific code live in src/debugUnitTest.
        testDebug.java.srcDir 'src/debugUnitTests/kotlin'

        // Unit tests for release build type specific code live in src/releaseUnitTest.
        testRelease.java.srcDir 'src/releaseUnitTests/kotlin'

        // Functional tests live in src/functionalTests.
        androidTest.java.srcDir 'src/functionalTests/kotlin'
    }

    lintOptions {
        warningsAsErrors false
        abortOnError false // Fail early.

        lintConfig file("lint.xml")
    }

    // Show all test output in the command line!
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
    }
}

// Use for legacy kapt implementation
// Required for annotation processing plugins like Dagger
// kapt {
//    generateStubs = true
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Google Support Libraries
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:support-fragment:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'com.github.Plastix.RxSchedulerRule:rx2:1.0.2'
    implementation 'com.github.Plastix.RxDelay:rx2:0.5.0'

    // Dagger 2
    kapt 'com.google.dagger:dagger-compiler:2.8'
    implementation 'com.google.dagger:dagger:2.8'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.0'

    // Misc
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton.timber:timber:4.1.2'

    // Databinding
    kapt "com.android.databinding:compiler:$android_plugin_version"


    implementation 'com.google.code.gson:gson:2.7'

    //Web Socket for Hub API
    implementation "org.java-websocket:Java-WebSocket:1.3.8"

    // IOS like Setting UI
    implementation 'com.thoughtbot:expandablerecyclerview:1.3'

    implementation 'com.koushikdutta.async:androidasync:2.+'

    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'

    implementation("android.arch.persistence.room:runtime:1.0.0") {
        exclude group: 'com.android.support'
    }
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0"
    // Unit Testing
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:1.10.19"
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

// Signing Config code
// From https://gist.github.com/gabrielemariotti/6856974
def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

